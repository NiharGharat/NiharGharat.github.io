{
    "projectName": "Bash Scripts",
    "identifier": "bash_scripts",
    "techStack": [
        "Bash", "Kubernetes", "Git", "Automation", "Ubuntu", "rSync"
    ],
    "why": "Tried and was tired of doing same tasks manually. Tried and was hooked to bash script",
    "addiction" : "",
    "storyParas" : [
        "Needed huge files for performance benchmarking. Wrote a bash script to create a variable columnar/rows csv file from a sample smaller file generated based on <strong>required size</strong>",
        "LTI(Not a part of this repo) - Midway with all the hype of deployment to ease the deployment process at client environment, support came up with their version of script to do so. Easy for them, ain't so for us, we needed to be <strong>extra meticulous</strong> with the git push on their branch. I wrote a script client auto deploy which will take the cutout from their main, do necessary changes to tags - commit and push the changes on supports deploy_repo. <strong>Deployment successful!</strong>",
        "Tried my hand using <strong>rSync</strong> for ensuring backups are <strong>periodic</strong> and my mobile data is backed up correctly on my HDD (WIP)",
        "LTI(Not a part of this repo) - Wrote 2 bash scripts for doing <strong>auto performance benchmarking</strong> of our connector service. Eg-Today we will benchmark our MySQL connector; it will do 1 parallel request, 3, 5, 10, etc. on loads of 10k, 50k, 100k rows, etc. All <strong>standardized</strong>. All metric data pushed as csv export, safely tucked away on our service pod's storage mount. I would start the script at the start of the day, and retrieve the results at EOD. Script was robust enough to handle pod failures. The one for <strong>Spark on K8S</strong> submitted a job on Spark on K8S monitored <strong>pod activity periodically</strong>, and once finished collected the metric. The other one will submit our requested load requests periodically and monitor the service pod logs and collect metrics once done."
    ],
    "projectType": "personal",
    "repoPrivate": true,
    "githubLink": "",
    "order" : 5,
    "logo": "project_bash_scripts.png",
    "author": true
} 